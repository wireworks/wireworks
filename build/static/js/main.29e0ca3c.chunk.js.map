{"version":3,"sources":["serviceWorker.ts","app/components/Header.tsx","app/components/Footer.tsx","app/pages/tools/layer-1/bitflux.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","WireworksHeader","_ref","toolname","layer","regm","exec","pathname","parseInt","bitflux","macfetch","ipfetch","ipbits","planner","undernets","tcptransmission","dnsflow","dnstree","document","body","className","react_default","a","createElement","react_router_dom","to","concat","undefined","Fragment","Footer","href","BitFlux","bin_start","bin_stop","toShow","bin_arr","Array","fill","intervalID","open","mustHold","state","btn","clColor","logArr","clock","_this","unshift","pop","plot","setState","st","slice","length","toggleAuto","clearInterval","setInterval","toggleHold","toggle","canvas","getElementById","ctx","getContext","arr","lineSize","width","drawVerticalSize","height","vOffset","lineCap","lineJoin","clearRect","beginPath","lineWidth","strokeStyle","moveTo","lineTo","stroke","i","val","this","_this2","id","onClick","onMouseDown","onMouseUp","onMouseLeave","map","el","index","key","type","onChange","defaultChecked","htmlFor","Component","Layer1","lazy","__webpack_require__","e","then","bind","Layer2","Layer3","Layer4","Layer5","MacFetch","Ipbits","Undernets","Planner","TcpCarrier","DnsFlow","DnsTree","MainMenu","loader","ReactDOM","render","basename","react_router","path","component","react","fallback","exact","ipFetch","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29e0ca3c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { FC } from \"react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\n\nexport interface IHeader {layer: number, toolname: string}\n\nexport const WireworksHeader: FC<RouteComponentProps> = ({match}) => {\n\n    const reg = /\\/layers\\/(\\d)(?:\\/([a-z]*))?/;\n\n    const toolNames : { [key:string]:string; } = {\n\t\t\n\t\t'bitflux': \"Bit Flux\",\n\n        'macfetch': \"MAC Fetch\",\n        'ipfetch': \"IP Fetch\",\n\t\t\n\t\t'ipbits': 'IPBits',\n        'planner': 'Planner',\n        'undernets': 'Undernets',\n\n        'tcptransmission': 'TCP Carrier',\n\n        'dnsflow': 'DNS Flow',\n        'dnstree': 'DNS Tree'\n    };\n\n    let layer = 0;\n    let toolname;\n\n    let regm = reg.exec(window.location.pathname);\n    if (regm) {\n\n        layer = parseInt(regm[1]);\n        \n        if (regm[2]) {\n            toolname = toolNames[regm[2]];\n        }\n        \n    }\n\n    if (layer <= 5 && layer >= 1) {\n        document.body.className = \"theme-layer\"+layer;\n    }\n    else {\n        document.body.className = \"theme-wireworks\";\n    }\n\n    return (\n        <header>\n            <div className=\"spacer\">\n                <Link to=\"/\" className=\"logo\">wireworks</Link>\n                <span>\n                    {\n                    layer > 0 &&\n                    <Link to={`/layers/${layer}`}>Camada {layer}</Link>\n                    }\n\n                    {\n                    toolname === undefined ||\n                    <>\n                        <span className=\"breadcrumb\"></span>\n                        <span>{toolname}</span>\n                    </>\n                    }\n                </span>\n            </div>\n        </header>\n    );\n\n}","import React, { FC } from \"react\";\n\nconst Footer: FC = () => <footer>\n\t<h4>© <a href=\"https://github.com/henriquecolini\">Henrique Colini</a> e <a href=\"https://github.com/AlvaroDziadzio\">Álvaro Dziadzio</a> 2019</h4>\n\t<h4>Info16 <i className=\"material-icons\">code</i></h4>\n</footer>\n\nexport default Footer;","import React, { Component } from \"react\";\nimport \"src/sass/pages/bitflux.scss\";\n\n\nclass BitFlux extends Component {\n\n\treadonly bin_start = [true, false, true, false]\n\treadonly bin_stop = [false, false, false, false, false, false, false, false];\n\treadonly toShow = 10;\n\tbin_arr = new Array<boolean>(18).fill(false);\n\tintervalID;\n\topen = false;\n\n\tmustHold = false;\n\n\tstate = {\n\t\tbtn: true,\n\t\tclColor: false,\n\t\tlogArr: []\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.plot();\n\t\tthis.toggleAuto();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.intervalID);\n\t}\n\n\tclock = () => {\n\t\tthis.bin_arr.unshift(this.state.btn);\n\t\tthis.bin_arr.pop();\n\t\tthis.plot();\n\t\tthis.setState((st: {clColor: boolean}) => {return {clColor: !st.clColor}});\n\t\tthis.setState({logArr: this.bin_arr.slice(this.toShow, this.bin_arr.length)});\n\t}\n\n\ttoggleAuto = () => {\n\t\tif (this.intervalID) {\n\t\t\tclearInterval(this.intervalID);\n\t\t\tthis.intervalID = 0;\n\t\t} else {\n\t\t\tthis.intervalID = setInterval(this.clock, 1000);\n\t\t}\n\t}\n\n\ttoggleHold = () => {\n\t\tthis.mustHold = !this.mustHold;\n\t\tthis.setState({btn: false});\n\t}\n\n\ttoggle = () => {\n\t\tthis.setState((st: {btn: boolean}) => {\n\t\t\treturn {btn: !st.btn}\n\t\t});\n\t}\n\n\tplot = () => {\n\n\t\tconst canvas = (document.getElementById(\"flux-canvas\") as HTMLCanvasElement);\n\t\tconst ctx = canvas.getContext('2d');\n\t\tconst arr = this.bin_arr;\n\t\t\n\t\t//////////////\n\t\tconst vOffset = 10;\n\t\tconst lineSize = canvas.width/this.toShow;\n\t\tconst drawVerticalSize = canvas.height - (vOffset*2);\n\n\t\tctx.lineCap = \"round\";\n\t\tctx.lineJoin = \"round\";\n\n\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\tctx.beginPath();\n\t\tctx.lineWidth = 2;\n\t\tctx.strokeStyle = '#d0d0d0';\n\t\tctx.moveTo(0, canvas.height/2);\n\t\tctx.lineTo(canvas.width, canvas.height/2);\n\t\tctx.stroke();\n\n\t\tctx.beginPath();\n\t\tctx.lineWidth = 5;\n\t\tctx.strokeStyle = '#2b2b2b';\n\t\tfor (let i=0; i<this.toShow; i++) {\n\t\t\tconst val = arr[i] ? 0 : 1;\n\t\t\tctx.lineTo(lineSize * i, vOffset + (drawVerticalSize * val));\n\t\t\tctx.lineTo(lineSize * (i + 1), vOffset + (drawVerticalSize * val));\n\t\t}\n\t\tctx.stroke();\n\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<main>\n\n\t\t\t\t<div className=\"flux-clock-wrapper\">\n\t\t\t\t\t<div id=\"flux-clock\" className={this.state.clColor ? \"toggled\" : \"\"} onClick={this.clock}>Clock</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flux-panel\">\n\t\t\t\t\t<button \n\t\t\t\t\t\tonMouseDown={this.toggle}\n\t\t\t\t\t\tonMouseUp={()=>{if(this.mustHold)this.toggle()}}\n\t\t\t\t\t\tonMouseLeave={()=>{if(this.mustHold && this.state.btn)this.toggle()}}>{this.state.btn ? \"1\" : \"0\"}</button>\n\n\t\t\t\t\t<canvas height=\"260\" width=\"900\" id=\"flux-canvas\"></canvas>\n\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.state.logArr.map((el, index) => {\n\t\t\t\t\t\t\treturn <li key={index}>{el ? \"1\" : \"0\"}</li>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"checkbox\">\n\t\t\t\t\t<input id=\"flux-auto\" type=\"checkbox\" onChange={this.toggleAuto} defaultChecked/>\n\t\t\t\t\t<label htmlFor=\"flux-auto\">Clock automático</label>\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"checkbox\">\n\t\t\t\t\t<input id=\"flux-press\" type=\"checkbox\" onChange={this.toggleHold}/>\n\t\t\t\t\t<label htmlFor=\"flux-press\">Segurar botão</label>\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t</main>\n\t\t);\n\t}\n\n}\n\nexport default BitFlux;","import React, { FC, lazy, Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { WireworksHeader } from \"./app/components/Header\";\nimport Footer from \"./app/components/Footer\";\nimport \"src/sass/pages/index.scss\"\nimport BitFlux from \"./app/pages/tools/layer-1/bitflux\";\n\n\nconst Layer1 = lazy(() => import(\"./app/pages/layers/Layer1\"));\nconst Layer2 = lazy(() => import(\"./app/pages/layers/Layer2\"));\nconst Layer3 = lazy(() => import(\"./app/pages/layers/Layer3\"));\nconst Layer4 = lazy(() => import(\"./app/pages/layers/Layer4\"));\nconst Layer5 = lazy(() => import(\"./app/pages/layers/Layer5\"));\n\nconst MacFetch = lazy(() => import(\"./app/pages/tools/layer-2/macfetch\"));\n\nconst Ipbits = lazy(() => import(\"./app/pages/tools/layer-3/ipbits\"));\nconst Undernets = lazy(() => import(\"./app/pages/tools/layer-3/undernets\"));\nconst Planner = lazy(() => import(\"./app/pages/tools/layer-3/planner\"));\n\nconst TcpCarrier = lazy(() => import(\"./app/pages/tools/layer-4/tcpcarrier\"));\n\nconst DnsFlow = lazy(() => import(\"./app/pages/tools/layer-5/dnsflow\"));\nconst DnsTree = lazy(() => import(\"./app/pages/tools/layer-5/dnstree\"));\n\nconst MainMenu = lazy(() => import(\"./app/pages/MainMenu\"));\n\nconst loader = <main>\n\t<div className=\"vbox align-center px-6 py-6\">\n\t\t<div className=\"lds-ring\">\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t</div>\n\t</div>\n</main>\n\nconst Wireworks: FC = () =>\n\n<Router basename=\"build/#/\">\n\n    <div className=\"content\">\n\t\t\n\t\t<Route path=\"/\" component={WireworksHeader} />\n\n\t\t<Suspense fallback={loader}>\n\n\t\t\t<Switch>\n\n\t\t\t\t{/* All possible Routes */}\n\n\t\t\t\t{/* Main Menu */}\n\t\t\t\t<Route path=\"/\" exact component={MainMenu} />\n\n\t\t\t\t{/* Layer 1 */}\n\t\t\t\t<Route path=\"/layers/1/bitflux\" component={BitFlux} />\n\n\t\t\t\t{/* Layer 2*/}\n\t\t\t\t<Route path=\"/layers/2/macfetch\" render={() => {return <MacFetch ipFetch={false}/>;}} />\n\t\t\t\t<Route path=\"/layers/2/ipfetch\" render={() => { return <MacFetch ipFetch={true}/>;}} />\t\t\t\t\n\n\t\t\t\t{/* Layer 3 */}\n\t\t\t\t<Route path=\"/layers/3/ipbits\" component={Ipbits} />\n\t\t\t\t<Route path=\"/layers/3/undernets\" component={Undernets} />\n\t\t\t\t<Route path=\"/layers/3/planner\" component={Planner} />\n\n\t\t\t\t{/* Layer 4 */}\n\t\t\t\t<Route path=\"/layers/4/tcpcarrier\" component={TcpCarrier} />\n\n\t\t\t\t{/* Layer 5 */}\n\t\t\t\t<Route path=\"/layers/5/dnsflow\" component={DnsFlow} />\n\t\t\t\t<Route path=\"/layers/5/dnstree\" component={DnsTree} />\n\n\n\t\t\t\t{/* Layer Tools Menu */}\n\t\t\t\t<Route path=\"/layers/1\" component={Layer1} />\n\t\t\t\t<Route path=\"/layers/2\" component={Layer2} />\n\t\t\t\t<Route path=\"/layers/3\" component={Layer3} />\n\t\t\t\t<Route path=\"/layers/4\" component={Layer4} />\n\t\t\t\t<Route path=\"/layers/5\" component={Layer5} />\n\n\n\t\t\t\t{/* 404 */}\n\t\t\t\t<Route component={() =>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<h2 className=\"font-big p-3\">Nada aqui <span className=\"font-mono\">¯\\_(ツ)_/¯</span></h2>\n\t\t\t\t\t</main>\n\t\t\t\t} />\n\n\t\t\t</Switch>\n\t\t</Suspense>\n\n\t</div>\n\n\t<Route path=\"/\" component={Footer}/>\n\n</Router>\n\n\n\nReactDOM.render(<Wireworks/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}